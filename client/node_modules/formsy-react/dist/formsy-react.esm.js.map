{"version":3,"file":"formsy-react.esm.js","sources":["../src/utils.ts","../src/validationRules.ts","../src/FormsyContext.ts","../src/withFormsy.ts","../src/Formsy.ts"],"sourcesContent":["import { isPlainObject } from 'lodash';\n\nimport { ValidationError, Validations, Values } from './interfaces';\n\nexport function isArray(value: unknown): value is unknown[] {\n  return Array.isArray(value);\n}\n\nexport function isObject(value: unknown): value is object {\n  return isPlainObject(value);\n}\n\nexport function isTypeUndefined(value: unknown): value is undefined {\n  return typeof value === 'undefined';\n}\n\nexport function isDate(value: unknown): value is Date {\n  return value instanceof Date;\n}\n\nexport function isFunction(value: unknown): value is Function {\n  return value !== null && typeof value === 'function';\n}\n\nexport function isString(value: unknown): value is string {\n  return typeof value === 'string';\n}\n\nexport function isNumber(value: unknown): value is number {\n  return typeof value === 'number';\n}\n\nexport function isRegex(value: unknown): value is RegExp {\n  return value instanceof RegExp;\n}\n\nexport function isValueStringEmpty(value: string): boolean {\n  return value === '';\n}\n\nexport function isValueNullOrUndefined(value: unknown): boolean {\n  return value === null || value === undefined;\n}\n\nexport function isValueUndefined(value: unknown): boolean {\n  return value === undefined;\n}\n\nexport function noop() {\n  // do nothing.\n}\n\nexport function protectAgainstParamReassignment(value: unknown) {\n  // Clone objects to avoid accidental param reassignment\n  if (isObject(value)) return { ...value };\n  if (isArray(value)) return [...value];\n  return value;\n}\n\nexport function isSame(a: unknown, b: unknown) {\n  if (typeof a !== typeof b) {\n    return false;\n  }\n\n  if (isArray(a) && isArray(b)) {\n    if (a.length !== b.length) {\n      return false;\n    }\n\n    return a.every((item, index) => isSame(item, b[index]));\n  }\n\n  if (isFunction(a) && isFunction(b)) {\n    return a.toString() === b.toString();\n  }\n\n  if (isDate(a) && isDate(b)) {\n    return a.toString() === b.toString();\n  }\n\n  if (isObject(a) && isObject(b)) {\n    if (Object.keys(a).length !== Object.keys(b).length) {\n      return false;\n    }\n\n    return Object.keys(a).every((key) => isSame(a[key], b[key]));\n  }\n\n  if (isRegex(a) && isRegex(b)) {\n    return a.toString() === b.toString();\n  }\n\n  return a === b;\n}\n\ninterface RulesResult {\n  errors: ValidationError[];\n  failed: string[];\n  success: string[];\n}\n\nexport function runRules<V>(\n  value: V,\n  currentValues: Values,\n  validations: Validations<V>,\n  validationRules: Validations<V>,\n) {\n  const results: RulesResult = {\n    errors: [],\n    failed: [],\n    success: [],\n  };\n\n  Object.keys(validations).forEach((validationName) => {\n    const validationsVal = validations[validationName];\n    const validationRulesVal = validationRules[validationName];\n    const addToResults = (validation) => {\n      if (isString(validation)) {\n        results.errors.push(validation);\n        results.failed.push(validationName);\n      } else if (!validation) {\n        results.failed.push(validationName);\n      } else {\n        results.success.push(validationName);\n      }\n    };\n\n    if (validationRulesVal && isFunction(validationsVal)) {\n      throw new Error(`Formsy does not allow you to override default validations: ${validationName}`);\n    }\n\n    if (!validationRulesVal && !isFunction(validationsVal)) {\n      throw new Error(`Formsy does not have the validation rule: ${validationName}`);\n    }\n\n    if (isFunction(validationsVal)) {\n      return addToResults(validationsVal(currentValues, value));\n    }\n\n    return addToResults(validationRulesVal(currentValues, value, validationsVal));\n  });\n\n  return results;\n}\n\nexport function throttle(callback, interval) {\n  let enableCall = true;\n\n  return function (...args) {\n    if (!enableCall) return;\n\n    enableCall = false;\n    callback.apply(this, args);\n    setTimeout(() => (enableCall = true), interval);\n  };\n}\n","import { ValidationFunction, Values } from './interfaces';\nimport {\n  isNumber,\n  isString,\n  isTypeUndefined,\n  isValueNullOrUndefined,\n  isValueStringEmpty,\n  isValueUndefined,\n} from './utils';\n\nexport function isExisty<V>(value: V) {\n  return !isValueNullOrUndefined(value);\n}\n\nexport function isEmpty<V>(value: V) {\n  if (isString(value)) {\n    return isValueStringEmpty(value);\n  }\n  if (isTypeUndefined(value)) {\n    return false;\n  }\n  return isValueUndefined(value);\n}\n\nexport function isDefaultRequiredValue(value: unknown) {\n  return isString(value) ? isValueStringEmpty(value) : isValueNullOrUndefined(value);\n}\n\nexport function matchRegexp<V>(_values: Values, value: V, regexp: RegExp) {\n  return !isExisty(value) || isEmpty(value) || regexp.test(`${value}`);\n}\n\ninterface Validations<V> {\n  [key: string]: ValidationFunction<V>;\n}\n\nconst REGEX_PATTERNS = {\n  ALPHA: /^[A-Z]+$/i,\n  ALPHANUMERIC: /^[0-9A-Z]+$/i,\n  EMAIL:\n    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/i, // from http://emailregex.com/\n  FLOAT: /^(?:[-+]?(?:\\d+))?(?:\\.\\d*)?(?:[eE][+-]?(?:\\d+))?$/,\n  INT: /^(?:[-+]?(?:0|[1-9]\\d*))$/,\n  NUMERIC: /^[-+]?(?:\\d*[.])?\\d+$/,\n  SPECIAL_WORDS: /^[\\sA-ZÀ-ÖØ-öø-ÿ]+$/i,\n  URL: /^(?:\\w+:)?\\/\\/([^\\s.]+\\.\\S{2}|localhost[:?\\d]*)\\S*$/i,\n  WORDS: /^[A-Z\\s]+$/i,\n};\n\nconst validations: Validations<any> = {\n  equals: <V>(_values, value: V, eql: V) => !isExisty(value) || isEmpty(value) || value === eql,\n  equalsField: <V>(values, value: V, field: string) => value === values[field],\n  isAlpha: <V>(values, value: V) => matchRegexp(values, value, REGEX_PATTERNS.ALPHA),\n  isAlphanumeric: <V>(values, value: V) => matchRegexp(values, value, REGEX_PATTERNS.ALPHANUMERIC),\n  isDefaultRequiredValue: <V>(_values, value: V) => isDefaultRequiredValue(value),\n  isEmail: (values, value: string) => matchRegexp(values, value, REGEX_PATTERNS.EMAIL),\n  isEmptyString: (_values, value: string) => isEmpty(value),\n  isExisty: <V>(_values, value: V) => isExisty(value),\n  isFalse: (_values, value: boolean | string) => value === false,\n  isFloat: <V>(values, value: V) => matchRegexp(values, value, REGEX_PATTERNS.FLOAT),\n  isInt: <V>(values, value: V) => matchRegexp(values, value, REGEX_PATTERNS.INT),\n  isLength: (_values, value: string, length: number) => !isExisty(value) || isEmpty(value) || value.length === length,\n  isNumeric: <V>(values, value: V) => isNumber(value) || matchRegexp(values, value, REGEX_PATTERNS.NUMERIC),\n  isSpecialWords: <V>(values, value: V) => matchRegexp(values, value, REGEX_PATTERNS.SPECIAL_WORDS),\n  isTrue: (_values, value: boolean | string) => value === true,\n  isUndefined: <V>(_values, value: V) => isValueUndefined(value),\n  isUrl: <V>(values, value: V) => matchRegexp(values, value, REGEX_PATTERNS.URL),\n  isWords: <V>(values, value: V) => matchRegexp(values, value, REGEX_PATTERNS.WORDS),\n  matchRegexp,\n  maxLength: (_values, value: string, length: number) => !isExisty(value) || value.length <= length,\n  minLength: (_values, value: string, length: number) => !isExisty(value) || isEmpty(value) || value.length >= length,\n};\n\nexport const addValidationRule = <V>(name: string, func: ValidationFunction<V>) => {\n  validations[name] = func;\n};\n\nexport default validations;\n","import React from 'react';\nimport { FormsyContextInterface } from './interfaces';\n\nconst noFormsyErrorMessage = 'Could not find Formsy Context Provider. Did you use withFormsy outside <Formsy />?';\n\nconst throwNoFormsyProvider = () => {\n  // istanbul ignore next\n  throw new Error(noFormsyErrorMessage);\n};\n\nconst defaultValue = {\n  attachToForm: throwNoFormsyProvider,\n  detachFromForm: throwNoFormsyProvider,\n  isFormDisabled: true,\n  isValidValue: throwNoFormsyProvider,\n  validate: throwNoFormsyProvider,\n  runValidation: throwNoFormsyProvider,\n};\n\nexport default React.createContext<FormsyContextInterface>(defaultValue);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport FormsyContext from './FormsyContext';\nimport {\n  ComponentWithStaticAttributes,\n  FormsyContextInterface,\n  RequiredValidation,\n  ValidationError,\n  Validations,\n  WrappedComponentClass,\n} from './interfaces';\n\nimport * as utils from './utils';\nimport { isString } from './utils';\nimport { isDefaultRequiredValue } from './validationRules';\n\n/* eslint-disable react/default-props-match-prop-types */\n\nconst convertValidationsToObject = <V>(validations: false | Validations<V>): Validations<V> => {\n  if (isString(validations)) {\n    return validations.split(/,(?![^{[]*[}\\]])/g).reduce((validationsAccumulator, validation) => {\n      let args: string[] = validation.split(':');\n      const validateMethod: string = args.shift();\n\n      args = args.map((arg) => {\n        try {\n          return JSON.parse(arg);\n        } catch (e) {\n          return arg; // It is a string if it can not parse it\n        }\n      });\n\n      if (args.length > 1) {\n        throw new Error(\n          'Formsy does not support multiple args on string validations. Use object format of validations instead.',\n        );\n      }\n\n      // Avoid parameter reassignment\n      const validationsAccumulatorCopy: Validations<V> = { ...validationsAccumulator };\n      validationsAccumulatorCopy[validateMethod] = args.length ? args[0] : true;\n      return validationsAccumulatorCopy;\n    }, {});\n  }\n\n  return validations || {};\n};\n\nexport const propTypes = {\n  innerRef: PropTypes.func,\n  name: PropTypes.string.isRequired,\n  required: PropTypes.oneOfType([PropTypes.bool, PropTypes.object, PropTypes.string]),\n  validations: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n  value: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n};\n\nexport interface WrapperProps<V> {\n  innerRef?: (ref: React.Ref<any>) => void;\n  name: string;\n  required?: RequiredValidation<V>;\n  validationError?: ValidationError;\n  validationErrors?: { [key: string]: ValidationError };\n  validations?: Validations<V>;\n  value?: V;\n}\n\nexport interface WrapperState<V> {\n  [key: string]: unknown;\n\n  formSubmitted: boolean;\n  isPristine: boolean;\n  isRequired: boolean;\n  isValid: boolean;\n  pristineValue: V;\n  validationError: ValidationError[];\n  value: V;\n}\n\nexport interface InjectedProps<V> {\n  errorMessage: ValidationError;\n  errorMessages: ValidationError[];\n  hasValue: boolean;\n  isFormDisabled: boolean;\n  isFormSubmitted: boolean;\n  isPristine: boolean;\n  isRequired: boolean;\n  isValid: boolean;\n  isValidValue: (value: V) => boolean;\n  ref?: React.Ref<any>;\n  resetValue: () => void;\n  setValidations: (validations: Validations<V>, required: RequiredValidation<V>) => void;\n  setValue: (value: V, validate?: boolean) => void;\n  showError: boolean;\n  showRequired: boolean;\n}\n\nexport interface WrapperInstanceMethods<V> {\n  getErrorMessage: () => null | ValidationError;\n  getErrorMessages: () => ValidationError[];\n  getValue: () => V;\n  isFormDisabled: () => boolean;\n  isFormSubmitted: () => boolean;\n  isValid: () => boolean;\n  isValidValue: (value: V) => boolean;\n  setValue: (value: V, validate?: boolean) => void;\n}\n\nexport type PassDownProps<V> = WrapperProps<V> & InjectedProps<V>;\n\nfunction getDisplayName(component: WrappedComponentClass) {\n  return component.displayName || component.name || (utils.isString(component) ? component : 'Component');\n}\n\nexport default function withFormsy<T, V>(\n  WrappedComponent: React.ComponentType<T & PassDownProps<V>>,\n): React.ComponentType<Omit<T & WrapperProps<V>, keyof InjectedProps<V>>> {\n  class WithFormsyWrapper\n    extends React.Component<T & WrapperProps<V> & FormsyContextInterface, WrapperState<V>>\n    implements WrapperInstanceMethods<V>\n  {\n    public validations?: Validations<V>;\n\n    public requiredValidations?: Validations<V>;\n\n    public static displayName = `Formsy(${getDisplayName(WrappedComponent)})`;\n\n    public static propTypes: any = propTypes;\n\n    public static defaultProps: any = {\n      innerRef: null,\n      required: false,\n      validationError: '',\n      validationErrors: {},\n      validations: null,\n      value: (WrappedComponent as ComponentWithStaticAttributes).defaultValue,\n    };\n\n    public constructor(props) {\n      super(props);\n      const { runValidation, validations, required, value } = props;\n\n      this.state = { value } as any;\n\n      this.setValidations(validations, required);\n\n      this.state = {\n        formSubmitted: false,\n        isPristine: true,\n        pristineValue: props.value,\n        value: props.value,\n        ...runValidation(this, props.value),\n      };\n    }\n\n    public componentDidMount() {\n      const { name, attachToForm } = this.props;\n\n      if (!name) {\n        throw new Error('Form Input requires a name property when used');\n      }\n\n      attachToForm(this);\n    }\n\n    public shouldComponentUpdate(nextProps, nextState) {\n      const { props, state } = this;\n      const isChanged = (a: object, b: object): boolean => Object.keys(a).some((k) => a[k] !== b[k]);\n      const isPropsChanged = isChanged(props, nextProps);\n      const isStateChanged = isChanged(state, nextState);\n\n      return isPropsChanged || isStateChanged;\n    }\n\n    public componentDidUpdate(prevProps) {\n      const { value, validations, required, validate } = this.props;\n\n      // If the value passed has changed, set it. If value is not passed it will\n      // internally update, and this will never run\n      if (!utils.isSame(value, prevProps.value)) {\n        this.setValue(value);\n      }\n\n      // If validations or required is changed, run a new validation\n      if (!utils.isSame(validations, prevProps.validations) || !utils.isSame(required, prevProps.required)) {\n        this.setValidations(validations, required);\n        validate(this);\n      }\n    }\n\n    // Detach it when component unmounts\n    public componentWillUnmount() {\n      const { detachFromForm } = this.props;\n      detachFromForm(this);\n    }\n\n    public getErrorMessage = (): ValidationError | null => {\n      const messages = this.getErrorMessages();\n      return messages.length ? messages[0] : null;\n    };\n\n    public getErrorMessages = (): ValidationError[] => {\n      const { validationError } = this.state;\n\n      if (!this.isValid() || this.showRequired()) {\n        return validationError || [];\n      }\n      return [];\n    };\n\n    // eslint-disable-next-line react/destructuring-assignment\n    public getValue = (): V => this.state.value;\n\n    public setValidations = (validations: Validations<V>, required: RequiredValidation<V>): void => {\n      // Add validations to the store itself as the props object can not be modified\n      this.validations = convertValidationsToObject(validations) || {};\n      this.requiredValidations =\n        required === true ? { isDefaultRequiredValue: required } : convertValidationsToObject(required);\n    };\n\n    // By default, we validate after the value has been set.\n    // A user can override this and pass a second parameter of `false` to skip validation.\n    public setValue = (value: V, validate = true): void => {\n      const { validate: validateForm } = this.props;\n\n      if (!validate) {\n        this.setState({ value });\n      } else {\n        this.setState(\n          {\n            value,\n            isPristine: false,\n          },\n          () => {\n            validateForm(this);\n          },\n        );\n      }\n    };\n\n    // eslint-disable-next-line react/destructuring-assignment\n    public hasValue = () => {\n      const { value } = this.state;\n      return isDefaultRequiredValue(value);\n    };\n\n    // eslint-disable-next-line react/destructuring-assignment\n    public isFormDisabled = (): boolean => this.props.isFormDisabled;\n\n    // eslint-disable-next-line react/destructuring-assignment\n    public isFormSubmitted = (): boolean => this.state.formSubmitted;\n\n    // eslint-disable-next-line react/destructuring-assignment\n    public isPristine = (): boolean => this.state.isPristine;\n\n    // eslint-disable-next-line react/destructuring-assignment\n    public isRequired = (): boolean => !!this.props.required;\n\n    // eslint-disable-next-line react/destructuring-assignment\n    public isValid = (): boolean => this.state.isValid;\n\n    // eslint-disable-next-line react/destructuring-assignment\n    public isValidValue = (value: V) => this.props.isValidValue(this, value);\n\n    public resetValue = () => {\n      const { pristineValue } = this.state;\n      const { validate } = this.props;\n\n      this.setState(\n        {\n          value: pristineValue,\n          isPristine: true,\n        },\n        () => {\n          validate(this);\n        },\n      );\n    };\n\n    public showError = (): boolean => !this.showRequired() && !this.isValid();\n\n    // eslint-disable-next-line react/destructuring-assignment\n    public showRequired = (): boolean => this.state.isRequired;\n\n    public render() {\n      const { innerRef } = this.props;\n      const propsForElement: T & PassDownProps<V> = {\n        ...this.props,\n        errorMessage: this.getErrorMessage(),\n        errorMessages: this.getErrorMessages(),\n        hasValue: this.hasValue(),\n        isFormDisabled: this.isFormDisabled(),\n        isFormSubmitted: this.isFormSubmitted(),\n        isPristine: this.isPristine(),\n        isRequired: this.isRequired(),\n        isValid: this.isValid(),\n        isValidValue: this.isValidValue,\n        resetValue: this.resetValue,\n        setValidations: this.setValidations,\n        setValue: this.setValue,\n        showError: this.showError(),\n        showRequired: this.showRequired(),\n        value: this.getValue(),\n      };\n\n      if (innerRef) {\n        propsForElement.ref = innerRef;\n      }\n\n      return React.createElement(WrappedComponent, propsForElement);\n    }\n  }\n\n  // eslint-disable-next-line react/display-name\n  return (props) =>\n    React.createElement(FormsyContext.Consumer, null, ((contextValue) => {\n      return React.createElement(WithFormsyWrapper, { ...props, ...contextValue });\n    }) as any);\n}\n","/* eslint-disable react/no-unused-state, react/default-props-match-prop-types */\nimport { get, has, set } from 'lodash';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport FormsyContext from './FormsyContext';\nimport {\n  FormsyContextInterface,\n  IModel,\n  InputComponent,\n  IResetModel,\n  IUpdateInputsWithError,\n  IUpdateInputsWithValue,\n  ValidationError,\n} from './interfaces';\nimport { throttle, isObject, isString } from './utils';\nimport * as utils from './utils';\nimport validationRules from './validationRules';\nimport { PassDownProps } from './withFormsy';\n\ntype FormHTMLAttributesCleaned = Omit<React.FormHTMLAttributes<HTMLFormElement>, 'onChange' | 'onSubmit'>;\n\ntype OnSubmitCallback = (\n  model: IModel,\n  resetModel: IResetModel,\n  updateInputsWithError: IUpdateInputsWithError,\n  event: React.SyntheticEvent<HTMLFormElement>,\n) => void;\n\ntype FormElementType =\n  | string\n  | React.ComponentType<{\n      onReset?: (e: React.SyntheticEvent) => void;\n      onSubmit?: (e: React.SyntheticEvent) => void;\n      disabled?: boolean;\n      children?: React.ReactChildren;\n    }>;\n\nexport interface FormsyProps extends FormHTMLAttributesCleaned {\n  disabled: boolean;\n  mapping: null | ((model: IModel) => IModel);\n  onChange: (model: IModel, isChanged: boolean) => void;\n  onInvalid: () => void;\n  onReset?: () => void;\n  onSubmit?: OnSubmitCallback;\n  onValidSubmit?: OnSubmitCallback;\n  onInvalidSubmit: OnSubmitCallback;\n  onValid: () => void;\n  preventDefaultSubmit?: boolean;\n  preventExternalInvalidation?: boolean;\n  validationErrors?: null | object;\n  formElement?: FormElementType;\n}\n\nexport interface FormsyState {\n  canChange: boolean;\n  contextValue: FormsyContextInterface;\n  formSubmitted?: boolean;\n  isPristine?: boolean;\n  isSubmitting: boolean;\n  isValid: boolean;\n}\n\nconst ONE_RENDER_FRAME = 66;\n\nexport class Formsy extends React.Component<FormsyProps, FormsyState> {\n  public inputs: InstanceType<any & PassDownProps<any>>[];\n\n  public emptyArray: any[];\n\n  public prevInputNames: any[] | null = null;\n\n  public static displayName = 'Formsy';\n\n  public static propTypes = {\n    disabled: PropTypes.bool,\n    mapping: PropTypes.func,\n    formElement: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.func]),\n    onChange: PropTypes.func,\n    onInvalid: PropTypes.func,\n    onInvalidSubmit: PropTypes.func,\n    onReset: PropTypes.func,\n    onSubmit: PropTypes.func,\n    onValid: PropTypes.func,\n    onValidSubmit: PropTypes.func,\n    preventDefaultSubmit: PropTypes.bool,\n    preventExternalInvalidation: PropTypes.bool,\n    validationErrors: PropTypes.object, // eslint-disable-line\n  };\n\n  public static defaultProps: Partial<FormsyProps> = {\n    disabled: false,\n    mapping: null,\n    onChange: utils.noop,\n    onInvalid: utils.noop,\n    onInvalidSubmit: utils.noop,\n    onReset: utils.noop,\n    onSubmit: utils.noop,\n    onValid: utils.noop,\n    onValidSubmit: utils.noop,\n    preventDefaultSubmit: true,\n    preventExternalInvalidation: false,\n    validationErrors: {},\n    formElement: 'form',\n  };\n\n  private readonly throttledValidateForm: () => void;\n\n  public constructor(props: FormsyProps) {\n    super(props);\n    this.state = {\n      canChange: false,\n      isSubmitting: false,\n      isValid: true,\n      contextValue: {\n        attachToForm: this.attachToForm,\n        detachFromForm: this.detachFromForm,\n        isFormDisabled: props.disabled,\n        isValidValue: this.isValidValue,\n        validate: this.validate,\n        runValidation: this.runValidation,\n      },\n    };\n    this.inputs = [];\n    this.emptyArray = [];\n    this.throttledValidateForm = throttle(this.validateForm, ONE_RENDER_FRAME);\n  }\n\n  public componentDidMount = () => {\n    this.prevInputNames = this.inputs.map((component) => component.props.name);\n    this.validateForm();\n  };\n\n  public componentDidUpdate = (prevProps: FormsyProps) => {\n    const { validationErrors, disabled } = this.props;\n\n    if (validationErrors && isObject(validationErrors) && Object.keys(validationErrors).length > 0) {\n      this.setInputValidationErrors(validationErrors);\n    }\n\n    const newInputNames = this.inputs.map((component) => component.props.name);\n    if (this.prevInputNames && !utils.isSame(this.prevInputNames, newInputNames)) {\n      this.prevInputNames = newInputNames;\n      this.validateForm();\n    }\n\n    // Keep the disabled value in state/context the same as from props\n    if (disabled !== prevProps.disabled) {\n      // eslint-disable-next-line\n      this.setState((state) => ({\n        ...state,\n        contextValue: {\n          ...state.contextValue,\n          isFormDisabled: disabled,\n        },\n      }));\n    }\n  };\n\n  public getCurrentValues = () =>\n    this.inputs.reduce((valueAccumulator, component) => {\n      const {\n        props: { name },\n        state: { value },\n      } = component;\n      // eslint-disable-next-line no-param-reassign\n      valueAccumulator[name] = utils.protectAgainstParamReassignment(value);\n      return valueAccumulator;\n    }, {});\n\n  public getModel = () => {\n    const currentValues = this.getCurrentValues();\n    return this.mapModel(currentValues);\n  };\n\n  public getPristineValues = () =>\n    this.inputs.reduce((valueAccumulator, component) => {\n      const {\n        props: { name, value },\n      } = component;\n      // eslint-disable-next-line no-param-reassign\n      valueAccumulator[name] = utils.protectAgainstParamReassignment(value);\n      return valueAccumulator;\n    }, {});\n\n  public setFormPristine = (isPristine: boolean) => {\n    this.setState({\n      formSubmitted: !isPristine,\n    });\n\n    // Iterate through each component and set it as pristine\n    // or \"dirty\".\n    this.inputs.forEach((component) => {\n      component.setState({\n        formSubmitted: !isPristine,\n        isPristine,\n      });\n    });\n  };\n\n  public setInputValidationErrors = (errors) => {\n    const { preventExternalInvalidation } = this.props;\n    const { isValid } = this.state;\n\n    this.inputs.forEach((component) => {\n      const { name } = component.props;\n      component.setState({\n        isValid: !(name in errors),\n        validationError: isString(errors[name]) ? [errors[name]] : errors[name],\n      });\n    });\n    if (!preventExternalInvalidation && isValid) {\n      this.setFormValidState(false);\n    }\n  };\n\n  public setFormValidState = (allIsValid: boolean) => {\n    const { onValid, onInvalid } = this.props;\n\n    this.setState({\n      isValid: allIsValid,\n    });\n\n    if (allIsValid) {\n      onValid();\n    } else {\n      onInvalid();\n    }\n  };\n\n  public isValidValue = (component, value) => this.runValidation(component, value).isValid;\n\n  // eslint-disable-next-line react/destructuring-assignment\n  public isFormDisabled = () => this.props.disabled;\n\n  public mapModel = (model: IModel): IModel => {\n    const { mapping } = this.props;\n\n    if (mapping) {\n      return mapping(model);\n    }\n\n    const returnModel = {};\n    Object.keys(model).forEach((key) => {\n      set(returnModel, key, model[key]);\n    });\n    return returnModel;\n  };\n\n  public reset = (model?: IModel) => {\n    this.setFormPristine(true);\n    this.resetModel(model);\n  };\n\n  private resetInternal = (event) => {\n    const { onReset } = this.props;\n\n    event.preventDefault();\n    this.reset();\n    if (onReset) {\n      onReset();\n    }\n  };\n\n  // Reset each key in the model to the original / initial / specified value\n  private resetModel: IResetModel = (data) => {\n    this.inputs.forEach((component) => {\n      const { name } = component.props;\n      if (data && has(data, name)) {\n        component.setValue(get(data, name));\n      } else {\n        component.resetValue();\n      }\n    });\n    this.validateForm();\n  };\n\n  // Checks validation on current value or a passed value\n  public runValidation = <V>(\n    component: InputComponent<V>,\n    value = component.state.value,\n  ): { isRequired: boolean; isValid: boolean; validationError: ValidationError[] } => {\n    const { validationErrors } = this.props;\n    const { validationError, validationErrors: componentValidationErrors, name } = component.props;\n    const currentValues = this.getCurrentValues();\n    const validationResults = utils.runRules(value, currentValues, component.validations, validationRules);\n    const requiredResults = utils.runRules(value, currentValues, component.requiredValidations, validationRules);\n    const isRequired = Object.keys(component.requiredValidations).length ? !!requiredResults.success.length : false;\n    const isValid = !validationResults.failed.length && !(validationErrors && validationErrors[component.props.name]);\n\n    return {\n      isRequired,\n      isValid: isRequired ? false : isValid,\n      validationError: (() => {\n        if (isValid && !isRequired) {\n          return this.emptyArray;\n        }\n\n        if (validationResults.errors.length) {\n          return validationResults.errors;\n        }\n\n        if (validationErrors && validationErrors[name]) {\n          return isString(validationErrors[name]) ? [validationErrors[name]] : validationErrors[name];\n        }\n\n        if (isRequired) {\n          const error = componentValidationErrors[requiredResults.success[0]] || validationError;\n          return error ? [error] : null;\n        }\n\n        if (validationResults.failed.length) {\n          return validationResults.failed\n            .map((failed) => (componentValidationErrors[failed] ? componentValidationErrors[failed] : validationError))\n            .filter((x, pos, arr) => arr.indexOf(x) === pos); // remove duplicates\n        }\n\n        // This line is not reachable\n        // istanbul ignore next\n        return undefined;\n      })(),\n    };\n  };\n\n  // Method put on each input component to register\n  // itself to the form\n  public attachToForm = (component) => {\n    if (this.inputs.indexOf(component) === -1) {\n      this.inputs.push(component);\n    }\n\n    const { onChange } = this.props;\n    const { canChange } = this.state;\n\n    // Trigger onChange\n    if (canChange) {\n      onChange(this.getModel(), this.isChanged());\n    }\n\n    // Will be triggered immediately & every one frame rate\n    this.throttledValidateForm();\n  };\n\n  // Method put on each input component to unregister\n  // itself from the form\n  public detachFromForm = <V>(component: InputComponent<V>) => {\n    const componentPos = this.inputs.indexOf(component);\n\n    if (componentPos !== -1) {\n      this.inputs = this.inputs.slice(0, componentPos).concat(this.inputs.slice(componentPos + 1));\n    }\n\n    this.validateForm();\n  };\n\n  // Checks if the values have changed from their initial value\n  public isChanged = () => !utils.isSame(this.getPristineValues(), this.getCurrentValues());\n\n  // Update model, submit to url prop and send the model\n  public submit = (event?: React.SyntheticEvent<HTMLFormElement>) => {\n    const { onSubmit, onValidSubmit, onInvalidSubmit, preventDefaultSubmit } = this.props;\n    const { isValid } = this.state;\n\n    if (preventDefaultSubmit && event && event.preventDefault) {\n      event.preventDefault();\n    }\n\n    // Trigger form as not pristine.\n    // If any inputs have not been touched yet this will make them dirty\n    // so validation becomes visible (if based on isPristine)\n    this.setFormPristine(false);\n    const model = this.getModel();\n    onSubmit(model, this.resetModel, this.updateInputsWithError, event);\n\n    if (isValid) {\n      onValidSubmit(model, this.resetModel, this.updateInputsWithError, event);\n    } else {\n      onInvalidSubmit(model, this.resetModel, this.updateInputsWithError, event);\n    }\n  };\n\n  // Go through errors from server and grab the components\n  // stored in the inputs map. Change their state to invalid\n  // and set the serverError message\n  public updateInputsWithError: IUpdateInputsWithError = (errors, invalidate) => {\n    const { preventExternalInvalidation } = this.props;\n    const { isValid } = this.state;\n\n    Object.entries(errors).forEach(([name, error]) => {\n      const component = this.inputs.find((input) => input.props.name === name);\n      if (!component) {\n        throw new Error(\n          `You are trying to update an input that does not exist. Verify errors object with input names. ${JSON.stringify(\n            errors,\n          )}`,\n        );\n      }\n      component.setState({\n        isValid: preventExternalInvalidation,\n        validationError: utils.isString(error) ? [error] : error,\n      });\n    });\n\n    if (invalidate && isValid) {\n      this.setFormValidState(false);\n    }\n  };\n\n  // Set the value of components\n  public updateInputsWithValue: IUpdateInputsWithValue<any> = (data, validate) => {\n    this.inputs.forEach((component) => {\n      const { name } = component.props;\n      if (data && has(data, name)) {\n        component.setValue(get(data, name), validate);\n      }\n    });\n  };\n\n  // Use the binded values and the actual input value to\n  // validate the input and set its state. Then check the\n  // state of the form itself\n  public validate = <V>(component: InputComponent<V>) => {\n    const { onChange } = this.props;\n    const { canChange } = this.state;\n\n    // Trigger onChange\n    if (canChange) {\n      onChange(this.getModel(), this.isChanged());\n    }\n\n    const validationState = this.runValidation<V>(component);\n    // Run through the validations, split them up and call\n    // the validator IF there is a value or it is required\n    component.setState(validationState, this.validateForm);\n  };\n\n  // Validate the form by going through all child input components\n  // and check their state\n  public validateForm = () => {\n    // We need a callback as we are validating all inputs again. This will\n    // run when the last component has set its state\n    const onValidationComplete = () => {\n      const allIsValid = this.inputs.every((component) => component.state.isValid);\n\n      this.setFormValidState(allIsValid);\n\n      // Tell the form that it can start to trigger change events\n      this.setState({\n        canChange: true,\n      });\n    };\n\n    // Run validation again in case affected by other inputs. The\n    // last component validated will run the onValidationComplete callback\n    this.inputs.forEach((component, index) => {\n      const validationState = this.runValidation(component);\n      const isFinalInput = index === this.inputs.length - 1;\n      const callback = isFinalInput ? onValidationComplete : null;\n      component.setState(validationState, callback);\n    });\n\n    // If there are no inputs, set state where form is ready to trigger\n    // change event. New inputs might be added later\n    if (!this.inputs.length) {\n      this.setState(\n        {\n          canChange: true,\n        },\n        onValidationComplete,\n      );\n    }\n  };\n\n  public render() {\n    const {\n      /* eslint-disable @typescript-eslint/no-unused-vars */\n      children,\n      mapping,\n      onChange,\n      onInvalid,\n      onInvalidSubmit,\n      onReset,\n      onSubmit,\n      onValid,\n      onValidSubmit,\n      preventDefaultSubmit,\n      preventExternalInvalidation,\n      validationErrors,\n      disabled,\n      formElement,\n      ...nonFormsyProps\n    } = this.props;\n    const { contextValue } = this.state;\n\n    return React.createElement(\n      FormsyContext.Provider,\n      {\n        value: contextValue,\n      },\n      React.createElement(\n        formElement,\n        {\n          onReset: this.resetInternal,\n          onSubmit: this.submit,\n          ...nonFormsyProps,\n          disabled,\n        },\n        children,\n      ),\n    );\n  }\n}\n"],"names":["isArray","value","Array","isObject","isPlainObject","isTypeUndefined","isDate","Date","isFunction","isString","isNumber","isRegex","RegExp","isValueStringEmpty","isValueNullOrUndefined","undefined","isValueUndefined","noop","protectAgainstParamReassignment","isSame","a","b","length","every","item","index","toString","Object","keys","key","runRules","currentValues","validations","validationRules","results","errors","failed","success","forEach","validationName","validationsVal","validationRulesVal","addToResults","validation","push","Error","throttle","callback","interval","enableCall","args","apply","setTimeout","isExisty","isEmpty","isDefaultRequiredValue","matchRegexp","_values","regexp","test","REGEX_PATTERNS","ALPHA","ALPHANUMERIC","EMAIL","FLOAT","INT","NUMERIC","SPECIAL_WORDS","URL","WORDS","equals","eql","equalsField","values","field","isAlpha","isAlphanumeric","isEmail","isEmptyString","isFalse","isFloat","isInt","isLength","isNumeric","isSpecialWords","isTrue","isUndefined","isUrl","isWords","maxLength","minLength","addValidationRule","name","func","noFormsyErrorMessage","throwNoFormsyProvider","defaultValue","attachToForm","detachFromForm","isFormDisabled","isValidValue","validate","runValidation","React","createContext","convertValidationsToObject","split","reduce","validationsAccumulator","validateMethod","shift","map","arg","JSON","parse","e","validationsAccumulatorCopy","propTypes","innerRef","PropTypes","string","isRequired","required","oneOfType","bool","object","any","getDisplayName","component","displayName","utils","withFormsy","WrappedComponent","WithFormsyWrapper","props","messages","getErrorMessages","validationError","state","isValid","showRequired","requiredValidations","validateForm","setState","isPristine","formSubmitted","pristineValue","setValidations","componentDidMount","shouldComponentUpdate","nextProps","nextState","isChanged","some","k","isPropsChanged","isStateChanged","componentDidUpdate","prevProps","setValue","componentWillUnmount","render","propsForElement","errorMessage","getErrorMessage","errorMessages","hasValue","isFormSubmitted","resetValue","showError","getValue","ref","createElement","Component","validationErrors","FormsyContext","Consumer","contextValue","ONE_RENDER_FRAME","Formsy","prevInputNames","inputs","disabled","setInputValidationErrors","newInputNames","valueAccumulator","getCurrentValues","mapModel","preventExternalInvalidation","setFormValidState","allIsValid","onValid","onInvalid","model","mapping","returnModel","set","setFormPristine","resetModel","event","onReset","preventDefault","reset","data","has","get","componentValidationErrors","validationResults","requiredResults","emptyArray","error","filter","x","pos","arr","indexOf","onChange","canChange","getModel","throttledValidateForm","componentPos","slice","concat","getPristineValues","onSubmit","onValidSubmit","onInvalidSubmit","preventDefaultSubmit","updateInputsWithError","invalidate","entries","find","input","stringify","validationState","onValidationComplete","isFinalInput","isSubmitting","children","formElement","nonFormsyProps","Provider","resetInternal","submit"],"mappings":"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"}