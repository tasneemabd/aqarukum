{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\NITRO\\\\Desktop\\\\Bonik-Ecommerice-Website-in-React\\\\src\\\\components\\\\accountbox\\\\signupForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\"; // Import useHistory from react-router-dom\n\nimport { BoldLink, BoxContainer, FormContainer, Input, LineText, MutedLink, SubmitButton } from \"./comman\";\nimport { Marginer } from \"../marginer\";\nimport { AccountContext } from './AccountContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function SignupForm(props) {\n  _s();\n\n  const {\n    switchToSignin\n  } = useContext(AccountContext);\n  const history = useHistory(); // Initialize useHistory\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [phoneNumber, setPhoneNumber] = useState(''); // async function registerUser(e) {\n  //   e.preventDefault();\n  //   const response = await fetch('http://localhost:9000/users/signup', {\n  //     method: 'POST',\n  //     headers: {\n  //       'Content-Type': 'application/json',\n  //     }, \n  //     body: JSON.stringify({\n  //       name,\n  //       email,\n  //       password,\n  //     }),\n  //   });\n  //   const data = await response.json();\n  //   console.log(data);\n  //   if(data.status==='ok'){\n  //     alert(\"Register successfully\")\n  //     window.location.href='/'\n  //   }else{\n  //     alert(\"Please check your Register\")\n  //   }\n  // }\n\n  async function registerUser(e) {\n    e.preventDefault(); // Validate if name, email, password, and phoneNumber are not empty\n\n    if (!name || !email || !password) {\n      alert(\"Please fill in all fields\");\n      return;\n    }\n\n    const response = await fetch('http://localhost:9000/users/signup', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name,\n        email,\n        password\n      })\n    });\n    const data = await response.json();\n    console.log(data);\n\n    if (data.status === 'ok') {\n      // Alert the user that an OTP has been sent\n      alert(\"Register successfully. Check your phone for OTP.\"); // Redirect the user to the OTP verification page\n\n      history.push(`/verify-otp/${data.userId}`);\n    } else {\n      alert(\"Please check your Register\");\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(BoxContainer, {\n    children: [/*#__PURE__*/_jsxDEV(FormContainer, {\n      onSubmit: registerUser,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        placeholder: \"\\u0627\\u0644\\u0627\\u0633\\u0645 \\u0627\\u0644\\u0643\\u0627\\u0645\\u0644 \",\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"email\",\n        placeholder: \"\\u0627\\u0644\\u0628\\u0631\\u064A\\u062F \\u0627\\u0644\\u0627\\u0644\\u0643\\u062A\\u0631\\u0648\\u0646\\u064A\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"password\",\n        value: password,\n        placeholder: \"\\u0627\\u0644\\u0631\\u0642\\u0645 \\u0627\\u0644\\u0633\\u0631\\u064A\",\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Marginer, {\n        direction: \"vertical\",\n        margin: 10\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SubmitButton, {\n        type: \"submit\",\n        onSubmit: registerUser,\n        children: \"Signup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Marginer, {\n      direction: \"vertical\",\n      margin: \"5px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LineText, {\n      children: [\"Already have an account?\", \" \", /*#__PURE__*/_jsxDEV(BoldLink, {\n        onClick: switchToSignin,\n        href: \"#\",\n        children: \"Signin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SignupForm, \"sudwEqkskKeknes1MNnny02cNQ4=\", false, function () {\n  return [useHistory];\n});\n\n_c = SignupForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignupForm\");","map":{"version":3,"sources":["C:/Users/NITRO/Desktop/Bonik-Ecommerice-Website-in-React/src/components/accountbox/signupForm.jsx"],"names":["React","useContext","useState","useHistory","BoldLink","BoxContainer","FormContainer","Input","LineText","MutedLink","SubmitButton","Marginer","AccountContext","SignupForm","props","switchToSignin","history","name","setName","email","setEmail","password","setPassword","phoneNumber","setPhoneNumber","registerUser","e","preventDefault","alert","response","fetch","method","headers","body","JSON","stringify","data","json","console","log","status","push","userId","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,UAAT,QAA2B,kBAA3B,C,CAAgD;;AAChD,SACEC,QADF,EAEEC,YAFF,EAGEC,aAHF,EAIEC,KAJF,EAKEC,QALF,EAMEC,SANF,EAOEC,YAPF,QAQO,UARP;AASA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,cAAT,QAA+B,kBAA/B;;AAEA,OAAO,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AAChC,QAAM;AAAEC,IAAAA;AAAF,MAAqBd,UAAU,CAACW,cAAD,CAArC;AACA,QAAMI,OAAO,GAAGb,UAAU,EAA1B,CAFgC,CAED;;AAE/B,QAAM,CAACc,IAAD,EAAOC,OAAP,IAAkBhB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACiB,KAAD,EAAQC,QAAR,IAAoBlB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACmB,QAAD,EAAWC,WAAX,IAA0BpB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACqB,WAAD,EAAcC,cAAd,IAAgCtB,QAAQ,CAAC,EAAD,CAA9C,CAPgC,CAUhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAGA;AACA;AAEA;AACA;;AACA,iBAAeuB,YAAf,CAA4BC,CAA5B,EAA+B;AAC7BA,IAAAA,CAAC,CAACC,cAAF,GAD6B,CAG7B;;AACA,QAAI,CAACV,IAAD,IAAS,CAACE,KAAV,IAAmB,CAACE,QAAxB,EAAmC;AACjCO,MAAAA,KAAK,CAAC,2BAAD,CAAL;AACA;AACD;;AAED,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAD,EAAuC;AACjEC,MAAAA,MAAM,EAAE,MADyD;AAEjEC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFwD;AAKjEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBlB,QAAAA,IADmB;AAEnBE,QAAAA,KAFmB;AAGnBE,QAAAA;AAHmB,OAAf;AAL2D,KAAvC,CAA5B;AAYA,UAAMe,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAAnB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;;AAEA,QAAIA,IAAI,CAACI,MAAL,KAAgB,IAApB,EAA0B;AACxB;AACAZ,MAAAA,KAAK,CAAC,kDAAD,CAAL,CAFwB,CAIxB;;AACAZ,MAAAA,OAAO,CAACyB,IAAR,CAAc,eAAcL,IAAI,CAACM,MAAO,EAAxC;AACD,KAND,MAMO;AACLd,MAAAA,KAAK,CAAC,4BAAD,CAAL;AACD;AACF;;AAED,sBACE,QAAC,YAAD;AAAA,4BACE,QAAC,aAAD;AAAe,MAAA,QAAQ,EAAEH,YAAzB;AAAA,8BACE,QAAC,KAAD;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,sEAFd;AAGE,QAAA,KAAK,EAAER,IAHT;AAIE,QAAA,QAAQ,EAAGS,CAAD,IAAOR,OAAO,CAACQ,CAAC,CAACiB,MAAF,CAASC,KAAV;AAJ1B;AAAA;AAAA;AAAA;AAAA,cADF,eAQE,QAAC,KAAD;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,WAAW,EAAC,mGAFd;AAGE,QAAA,KAAK,EAAEzB,KAHT;AAIE,QAAA,QAAQ,EAAGO,CAAD,IAAON,QAAQ,CAACM,CAAC,CAACiB,MAAF,CAASC,KAAV;AAJ3B;AAAA;AAAA;AAAA;AAAA,cARF,eAeE,QAAC,KAAD;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,KAAK,EAAEvB,QAFT;AAGE,QAAA,WAAW,EAAC,+DAHd;AAIE,QAAA,QAAQ,EAAGK,CAAD,IAAOJ,WAAW,CAACI,CAAC,CAACiB,MAAF,CAASC,KAAV;AAJ9B;AAAA;AAAA;AAAA;AAAA,cAfF,eAwBE,QAAC,QAAD;AAAU,QAAA,SAAS,EAAC,UAApB;AAA+B,QAAA,MAAM,EAAE;AAAvC;AAAA;AAAA;AAAA;AAAA,cAxBF,eAyBE,QAAC,YAAD;AAAc,QAAA,IAAI,EAAC,QAAnB;AAA4B,QAAA,QAAQ,EAAEnB,YAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAzBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eA4BE,QAAC,QAAD;AAAU,MAAA,SAAS,EAAC,UAApB;AAA+B,MAAA,MAAM,EAAC;AAAtC;AAAA;AAAA;AAAA;AAAA,YA5BF,eA6BE,QAAC,QAAD;AAAA,6CAC2B,GAD3B,eAEE,QAAC,QAAD;AAAU,QAAA,OAAO,EAAEV,cAAnB;AAAmC,QAAA,IAAI,EAAC,GAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YA7BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsCD;;GA9GeF,U;UAEEV,U;;;KAFFU,U","sourcesContent":["import React, { useContext, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";  // Import useHistory from react-router-dom\r\nimport {\r\n  BoldLink,\r\n  BoxContainer,\r\n  FormContainer,\r\n  Input,\r\n  LineText,\r\n  MutedLink,\r\n  SubmitButton,\r\n} from \"./comman\";\r\nimport { Marginer } from \"../marginer\";\r\nimport { AccountContext } from './AccountContext';\r\n\r\nexport function SignupForm(props) {\r\n  const { switchToSignin } = useContext(AccountContext);\r\n  const history = useHistory();  // Initialize useHistory\r\n\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [phoneNumber, setPhoneNumber] = useState('');\r\n\r\n  \r\n  // async function registerUser(e) {\r\n  //   e.preventDefault();\r\n  //   const response = await fetch('http://localhost:9000/users/signup', {\r\n  //     method: 'POST',\r\n  //     headers: {\r\n  //       'Content-Type': 'application/json',\r\n  //     }, \r\n  //     body: JSON.stringify({\r\n  //       name,\r\n  //       email,\r\n  //       password,\r\n  //     }),\r\n  //   });\r\n\r\n  //   const data = await response.json();\r\n  //   console.log(data);\r\n  //   if(data.status==='ok'){\r\n    \r\n  //     alert(\"Register successfully\")\r\n  //     window.location.href='/'\r\n\r\n      \r\n  //   }else{\r\n  //     alert(\"Please check your Register\")\r\n\r\n  //   }\r\n  // }\r\n  async function registerUser(e) {\r\n    e.preventDefault();\r\n  \r\n    // Validate if name, email, password, and phoneNumber are not empty\r\n    if (!name || !email || !password ) {\r\n      alert(\"Please fill in all fields\");\r\n      return;\r\n    }\r\n  \r\n    const response = await fetch('http://localhost:9000/users/signup', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        name,\r\n        email,\r\n        password,\r\n      }),\r\n    });\r\n  \r\n    const data = await response.json();\r\n    console.log(data);\r\n  \r\n    if (data.status === 'ok') {\r\n      // Alert the user that an OTP has been sent\r\n      alert(\"Register successfully. Check your phone for OTP.\");\r\n  \r\n      // Redirect the user to the OTP verification page\r\n      history.push(`/verify-otp/${data.userId}`);\r\n    } else {\r\n      alert(\"Please check your Register\");\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <BoxContainer>\r\n      <FormContainer onSubmit={registerUser}>\r\n        <Input\r\n          type=\"text\"\r\n          placeholder=\"الاسم الكامل \"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n\r\n        <Input\r\n          type=\"email\"\r\n          placeholder=\"البريد الالكتروني\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n\r\n        <Input\r\n          type=\"password\"\r\n          value={password}\r\n          placeholder=\"الرقم السري\"\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n\r\n\r\n\r\n        <Marginer direction=\"vertical\" margin={10} />\r\n        <SubmitButton type=\"submit\" onSubmit={registerUser}>Signup</SubmitButton>\r\n      </FormContainer>\r\n      <Marginer direction=\"vertical\" margin=\"5px\" />\r\n      <LineText>\r\n        Already have an account?{\" \"}\r\n        <BoldLink onClick={switchToSignin} href=\"#\">\r\n          Signin\r\n        </BoldLink>\r\n      </LineText>\r\n    </BoxContainer>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}