{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\NITRO\\\\Desktop\\\\Bonik-Ecommerice-Website-in-React\\\\src\\\\components\\\\accountbox\\\\signupForm.jsx\",\n    _s = $RefreshSig$();\n\n// import React, { useContext, useState } from \"react\";\n// import { useHistory } from \"react-router-dom\";  // Import useHistory from react-router-dom\n// import {\n//   BoldLink,\n//   BoxContainer,\n//   FormContainer,\n//   Input,\n//   LineText,\n//   MutedLink,\n//   SubmitButton,\n// } from \"./comman\";\n// import { Marginer } from \"../marginer\";\n// import { AccountContext } from './AccountContext';\n// export function SignupForm(props) {\n//   const { switchToSignin } = useContext(AccountContext);\n//   const history = useHistory();  // Initialize useHistory\n//   const [name, setName] = useState('');\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [phoneNumber, setPhoneNumber] = useState('');\n//   // async function registerUser(e) {\n//   //   e.preventDefault();\n//   //   const response = await fetch('http://localhost:9000/users/signup', {\n//   //     method: 'POST',\n//   //     headers: {\n//   //       'Content-Type': 'application/json',\n//   //     }, \n//   //     body: JSON.stringify({\n//   //       name,\n//   //       email,\n//   //       password,\n//   //     }),\n//   //   });\n//   //   const data = await response.json();\n//   //   console.log(data);\n//   //   if(data.status==='ok'){\n//   //     alert(\"Register successfully\")\n//   //     window.location.href='/'\n//   //   }else{\n//   //     alert(\"Please check your Register\")\n//   //   }\n//   // }\n//   async function registerUser(e) {\n//     e.preventDefault();\n//     // Validate if name, email, password, and phoneNumber are not empty\n//     if (!name || !email || !password || !phoneNumber) {\n//       alert(\"Please fill in all fields\");\n//       return;\n//     }\n//     const response = await fetch('http://localhost:9000/users/signup', {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//       },\n//       body: JSON.stringify({\n//         name,\n//         email,\n//         password,\n//         phoneNumber,\n//       }),\n//     });\n//     const data = await response.json();\n//     console.log(data);\n//     if (data.status === 'ok') {\n//       // Alert the user that an OTP has been sent\n//       alert(\"Register successfully. Check your phone for OTP.\");\n//       // Redirect the user to the OTP verification page\n//       history.push(`/verify-otp/${data.userId}`);\n//     } else {\n//       alert(\"Please check your Register\");\n//     }\n//   }\n//   return (\n//     <BoxContainer>\n//       <FormContainer onSubmit={registerUser}>\n//         <Input\n//           type=\"text\"\n//           placeholder=\"Full name\"\n//           value={name}\n//           onChange={(e) => setName(e.target.value)}\n//         />\n//         <Input\n//           type=\"email\"\n//           placeholder=\"Email\"\n//           value={email}\n//           onChange={(e) => setEmail(e.target.value)}\n//         />\n//         <Input\n//           type=\"password\"\n//           value={password}\n//           placeholder=\"Password\"\n//           onChange={(e) => setPassword(e.target.value)}\n//         />\n// <Input\n//   type=\"tel\"\n//   placeholder=\"Phone number\"\n//   value={phoneNumber}\n//   onChange={(e) => setPhoneNumber(e.target.value)}\n// />\n//         <Marginer direction=\"vertical\" margin={10} />\n//         <SubmitButton type=\"submit\" onSubmit={registerUser}>Signup</SubmitButton>\n//       </FormContainer>\n//       <Marginer direction=\"vertical\" margin=\"5px\" />\n//       <LineText>\n//         Already have an account?{\" \"}\n//         <BoldLink onClick={switchToSignin} href=\"#\">\n//           Signin\n//         </BoldLink>\n//       </LineText>\n//     </BoxContainer>\n//   );\n// }\nimport React, { useState } from \"react\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignupForm = () => {\n  _s();\n\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\n  const [verificationCode, setVerificationCode] = useState(\"\");\n  const [verificationId, setVerificationId] = useState(null);\n\n  const handleSendOtp = async () => {\n    try {\n      const phoneProvider = new firebase.auth.PhoneAuthProvider();\n      const id = await phoneProvider.verifyPhoneNumber(`+${phoneNumber}`, // Include the country code\n      new firebase.auth.RecaptchaVerifier(\"recaptcha-container\"));\n      setVerificationId(id);\n      alert(\"OTP sent successfully. Please check your phone.\");\n    } catch (error) {\n      console.error(\"Error sending OTP:\", error);\n      alert(\"Failed to send OTP. Please try again.\");\n    }\n  };\n\n  const handleVerifyOtp = async () => {\n    try {\n      const credential = firebase.auth.PhoneAuthProvider.credential(verificationId, verificationCode);\n      await firebase.auth().signInWithCredential(credential);\n      alert(\"Phone number verified successfully!\");\n    } catch (error) {\n      console.error(\"Error verifying OTP:\", error);\n      alert(\"Invalid OTP. Please try again.\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Phone Number:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"tel\",\n        value: phoneNumber,\n        onChange: e => setPhoneNumber(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"recaptcha-container\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendOtp,\n        children: \"Send OTP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Verification Code:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: verificationCode,\n        onChange: e => setVerificationCode(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleVerifyOtp,\n        children: \"Verify OTP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignupForm, \"oLlHtJ/nOZfWk0fwNzDJaZwjC7k=\");\n\n_c = SignupForm;\nexport default SignupForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignupForm\");","map":{"version":3,"sources":["C:/Users/NITRO/Desktop/Bonik-Ecommerice-Website-in-React/src/components/accountbox/signupForm.jsx"],"names":["React","useState","firebase","SignupForm","phoneNumber","setPhoneNumber","verificationCode","setVerificationCode","verificationId","setVerificationId","handleSendOtp","phoneProvider","auth","PhoneAuthProvider","id","verifyPhoneNumber","RecaptchaVerifier","alert","error","console","handleVerifyOtp","credential","signInWithCredential","e","target","value"],"mappingsgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACK,gBAAD,EAAmBC,mBAAnB,IAA0CN,QAAQ,CAAC,EAAD,CAAxD;AACA,QAAM,CAACO,cAAD,EAAiBC,iBAAjB,IAAsCR,QAAQ,CAAC,IAAD,CAApD;;AAEA,QAAMS,aAAa,GAAG,YAAY;AAChC,QAAI;AACF,YAAMC,aAAa,GAAG,IAAIT,QAAQ,CAACU,IAAT,CAAcC,iBAAlB,EAAtB;AACA,YAAMC,EAAE,GAAG,MAAMH,aAAa,CAACI,iBAAd,CACd,IAAGX,WAAY,EADD,EACI;AACnB,UAAIF,QAAQ,CAACU,IAAT,CAAcI,iBAAlB,CAAoC,qBAApC,CAFe,CAAjB;AAKAP,MAAAA,iBAAiB,CAACK,EAAD,CAAjB;AACAG,MAAAA,KAAK,CAAC,iDAAD,CAAL;AACD,KATD,CASE,OAAOC,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAc,oBAAd,EAAoCA,KAApC;AACAD,MAAAA,KAAK,CAAC,uCAAD,CAAL;AACD;AACF,GAdD;;AAgBA,QAAMG,eAAe,GAAG,YAAY;AAClC,QAAI;AACF,YAAMC,UAAU,GAAGnB,QAAQ,CAACU,IAAT,CAAcC,iBAAd,CAAgCQ,UAAhC,CACjBb,cADiB,EAEjBF,gBAFiB,CAAnB;AAKA,YAAMJ,QAAQ,CAACU,IAAT,GAAgBU,oBAAhB,CAAqCD,UAArC,CAAN;AACAJ,MAAAA,KAAK,CAAC,qCAAD,CAAL;AACD,KARD,CAQE,OAAOC,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAc,sBAAd,EAAsCA,KAAtC;AACAD,MAAAA,KAAK,CAAC,gCAAD,CAAL;AACD;AACF,GAbD;;AAeA,sBACE;AAAA,4BACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,IAAI,EAAC,KADP;AAEE,QAAA,KAAK,EAAEb,WAFT;AAGE,QAAA,QAAQ,EAAGmB,CAAD,IAAOlB,cAAc,CAACkB,CAAC,CAACC,MAAF,CAASC,KAAV;AAHjC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAUE;AAAA,8BACE;AAAK,QAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,OAAO,EAAEf,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF,eAeE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,KAAK,EAAEJ,gBAFT;AAGE,QAAA,QAAQ,EAAGiB,CAAD,IAAOhB,mBAAmB,CAACgB,CAAC,CAACC,MAAF,CAASC,KAAV;AAHtC;AAAA;AAAA;AAAA;AAAA,cAFF,eAOE;AAAQ,QAAA,OAAO,EAAEL,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD,CA/DD;;GAAMjB,U;;KAAAA,U;AAiEN,eAAeA,UAAf","sourcesContent":["// import React, { useContext, useState } from \"react\";\r\n// import { useHistory } from \"react-router-dom\";  // Import useHistory from react-router-dom\r\n// import {\r\n//   BoldLink,\r\n//   BoxContainer,\r\n//   FormContainer,\r\n//   Input,\r\n//   LineText,\r\n//   MutedLink,\r\n//   SubmitButton,\r\n// } from \"./comman\";\r\n// import { Marginer } from \"../marginer\";\r\n// import { AccountContext } from './AccountContext';\r\n\r\n// export function SignupForm(props) {\r\n//   const { switchToSignin } = useContext(AccountContext);\r\n//   const history = useHistory();  // Initialize useHistory\r\n\r\n//   const [name, setName] = useState('');\r\n//   const [email, setEmail] = useState('');\r\n//   const [password, setPassword] = useState('');\r\n//   const [phoneNumber, setPhoneNumber] = useState('');\r\n\r\n  \r\n//   // async function registerUser(e) {\r\n//   //   e.preventDefault();\r\n//   //   const response = await fetch('http://localhost:9000/users/signup', {\r\n//   //     method: 'POST',\r\n//   //     headers: {\r\n//   //       'Content-Type': 'application/json',\r\n//   //     }, \r\n//   //     body: JSON.stringify({\r\n//   //       name,\r\n//   //       email,\r\n//   //       password,\r\n//   //     }),\r\n//   //   });\r\n\r\n//   //   const data = await response.json();\r\n//   //   console.log(data);\r\n//   //   if(data.status==='ok'){\r\n    \r\n//   //     alert(\"Register successfully\")\r\n//   //     window.location.href='/'\r\n\r\n      \r\n//   //   }else{\r\n//   //     alert(\"Please check your Register\")\r\n\r\n//   //   }\r\n//   // }\r\n//   async function registerUser(e) {\r\n//     e.preventDefault();\r\n  \r\n//     // Validate if name, email, password, and phoneNumber are not empty\r\n//     if (!name || !email || !password || !phoneNumber) {\r\n//       alert(\"Please fill in all fields\");\r\n//       return;\r\n//     }\r\n  \r\n//     const response = await fetch('http://localhost:9000/users/signup', {\r\n//       method: 'POST',\r\n//       headers: {\r\n//         'Content-Type': 'application/json',\r\n//       },\r\n//       body: JSON.stringify({\r\n//         name,\r\n//         email,\r\n//         password,\r\n//         phoneNumber,\r\n//       }),\r\n//     });\r\n  \r\n//     const data = await response.json();\r\n//     console.log(data);\r\n  \r\n//     if (data.status === 'ok') {\r\n//       // Alert the user that an OTP has been sent\r\n//       alert(\"Register successfully. Check your phone for OTP.\");\r\n  \r\n//       // Redirect the user to the OTP verification page\r\n//       history.push(`/verify-otp/${data.userId}`);\r\n//     } else {\r\n//       alert(\"Please check your Register\");\r\n//     }\r\n//   }\r\n  \r\n//   return (\r\n//     <BoxContainer>\r\n//       <FormContainer onSubmit={registerUser}>\r\n//         <Input\r\n//           type=\"text\"\r\n//           placeholder=\"Full name\"\r\n//           value={name}\r\n//           onChange={(e) => setName(e.target.value)}\r\n//         />\r\n\r\n//         <Input\r\n//           type=\"email\"\r\n//           placeholder=\"Email\"\r\n//           value={email}\r\n//           onChange={(e) => setEmail(e.target.value)}\r\n//         />\r\n\r\n//         <Input\r\n//           type=\"password\"\r\n//           value={password}\r\n//           placeholder=\"Password\"\r\n//           onChange={(e) => setPassword(e.target.value)}\r\n//         />\r\n\r\n// <Input\r\n//   type=\"tel\"\r\n//   placeholder=\"Phone number\"\r\n//   value={phoneNumber}\r\n//   onChange={(e) => setPhoneNumber(e.target.value)}\r\n// />\r\n\r\n//         <Marginer direction=\"vertical\" margin={10} />\r\n//         <SubmitButton type=\"submit\" onSubmit={registerUser}>Signup</SubmitButton>\r\n//       </FormContainer>\r\n//       <Marginer direction=\"vertical\" margin=\"5px\" />\r\n//       <LineText>\r\n//         Already have an account?{\" \"}\r\n//         <BoldLink onClick={switchToSignin} href=\"#\">\r\n//           Signin\r\n//         </BoldLink>\r\n//       </LineText>\r\n//     </BoxContainer>\r\n//   );\r\n// }\r\n\r\nimport React, { useState } from \"react\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\n\r\nconst SignupForm = () => {\r\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\r\n  const [verificationCode, setVerificationCode] = useState(\"\");\r\n  const [verificationId, setVerificationId] = useState(null);\r\n\r\n  const handleSendOtp = async () => {\r\n    try {\r\n      const phoneProvider = new firebase.auth.PhoneAuthProvider();\r\n      const id = await phoneProvider.verifyPhoneNumber(\r\n        `+${phoneNumber}`, // Include the country code\r\n        new firebase.auth.RecaptchaVerifier(\"recaptcha-container\")\r\n      );\r\n\r\n      setVerificationId(id);\r\n      alert(\"OTP sent successfully. Please check your phone.\");\r\n    } catch (error) {\r\n      console.error(\"Error sending OTP:\", error);\r\n      alert(\"Failed to send OTP. Please try again.\");\r\n    }\r\n  };\r\n\r\n  const handleVerifyOtp = async () => {\r\n    try {\r\n      const credential = firebase.auth.PhoneAuthProvider.credential(\r\n        verificationId,\r\n        verificationCode\r\n      );\r\n\r\n      await firebase.auth().signInWithCredential(credential);\r\n      alert(\"Phone number verified successfully!\");\r\n    } catch (error) {\r\n      console.error(\"Error verifying OTP:\", error);\r\n      alert(\"Invalid OTP. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <label>Phone Number:</label>\r\n        <input\r\n          type=\"tel\"\r\n          value={phoneNumber}\r\n          onChange={(e) => setPhoneNumber(e.target.value)}\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        <div id=\"recaptcha-container\"></div>\r\n        <button onClick={handleSendOtp}>Send OTP</button>\r\n      </div>\r\n\r\n      <div>\r\n        <label>Verification Code:</label>\r\n        <input\r\n          type=\"text\"\r\n          value={verificationCode}\r\n          onChange={(e) => setVerificationCode(e.target.value)}\r\n        />\r\n        <button onClick={handleVerifyOtp}>Verify OTP</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignupForm;\r\n\r\n"]},"metadata":{},"sourceType":"module"}